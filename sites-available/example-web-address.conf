# 10 requests per second
limit_req_zone $binary_remote_addr zone=global_req_limit_per_ip:10m rate=10r/s;

# Each IP cannot start another before one process is finished
limit_conn_zone $binary_remote_addr zone=addr:10m;

server {
    server_name         example-web-address.com www.example-web-address.com;
    limit_conn          addr 2;
    # Queued for additional 12 requests
    limit_req           zone=global_req_limit_per_ip burst=12 nodelay;

    # Redirect to non-www
    if ($host ~* ^www\.(.*)) {
       set $host_without_www $1;
       rewrite ^(.*) http://$host_without_www$1 permanent;
    }

    # Redirect non-https traffic to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

    listen 443 ssl;

    # RSA certificate
    ssl_certificate /etc/letsencrypt/live/example-web-address.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/example-web-address.com/privkey.pem; # managed by Certbot

    include /etc/letsencrypt/options-ssl-nginx.conf;

    location / {
        proxy_pass              http://localhost:3000;
    }

    location ~ /.nginx-debug/ {
        return 200 $host;
    }

    location ~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /usr/share/nginx/html;

        allow all;
    }

    # No need due to nginx.conf
    # However, it can be completely closed or opened specifically for APIs.
    # access_log /var/log/nginx/example-web-address.com/access.log combined buffer=512k flush=1m;
    # error_log /var/log/nginx/example-web-address.com/error.log;

    location ~* \.(?:css|js)(\?.+)?$ {
        add_header              Cache-Control "public";
        autoindex               on;
        access_log              off;
        log_not_found           off;
        expires                 2d;
    }

    location ~* \.(?:ico|gif|jpe?g|png|svg|svgz|swf)(\?.+)?$ {
        add_header              Cache-Control "public";
        autoindex               on;
        access_log              off;
        log_not_found           off;
        expires                 6h;
        limit_rate_after        500k; 
        limit_rate              50k;
    }
    
    location ~ /\.ht {
        deny all;
    }
}

server {
    if ($host = www.example-web-address.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = example-web-address.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    listen [::]:80;
    server_name example-web-address.com www.example-web-address.com;
    return 404; # managed by Certbot
}
