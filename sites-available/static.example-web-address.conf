# 10 requests per second
limit_req_zone $binary_remote_addr zone=static_object_limit_per_ip:10m rate=10r/s;

# 1 request per second
limit_req_zone $binary_remote_addr zone=static_movie_limit_per_ip:10m rate=1r/s;

# Each IP cannot start another before one process is finished
limit_conn_zone $binary_remote_addr zone=static_object_addr:10m;

map $ssl_protocol $response_rate {
    "TLSv1.1" 25k;
    "TLSv1.2" 70k;
    "TLSv1.3" 100k;
}

server {
    root            /home/example-web-address/static;
    server_name     static.example-web-address.com;
    limit_conn      static_object_addr 2;
    limit_req       zone=static_object_limit_per_ip burst=12 nodelay;

    # Redirect non-https traffic to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

    listen 443 ssl http2;

    # RSA certificate
    ssl_certificate /etc/letsencrypt/live/example-web-address.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/example-web-address.com/privkey.pem; # managed by Certbot

    include /etc/letsencrypt/options-ssl-nginx.conf;

    location / {
        # index.$geo.html
        index index.html index.htm;
        try_files $uri $uri/ =404;
    }

    location ~ \.(webm|flv|avi|mp4|mpg|wmv|avi|mov|vob|mp3) {
        add_header              Cache-Control "public";
        autoindex               on;
        access_log              off;
        log_not_found           off;
        expires                 250d;
        limit_conn              addr 1;
        limit_req               zone=static_movie_limit_per_ip burst=1 nodelay;
        limit_rate_after        1024k; 
        limit_rate              $response_rate;
    }

    location ~* \.(?:ico|css|gif|jpe?g|js|png|svg|svgz|swf|pdf|docx|woff2)(\?.+)?$ {
        add_header              Cache-Control "public";
        autoindex               on;
        access_log              off;
        log_not_found           off;
        expires                 2M;
        limit_rate_after        512k; 
        limit_rate              $response_rate;
    }

    location ~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /usr/share/nginx/html;

        allow all;
    }
}

server {
    if ($host = static.example-web-address.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    listen [::]:80;
    server_name static.example-web-address.com;
    return 404; # managed by Certbot
}